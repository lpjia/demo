server {  
    # 监听 HTTP 80 端口，包括 IPv4 和 IPv6  
    listen 80;  # 监听所有IPv4地址的80端口
    listen [::]:80;  # 监听所有IPv6地址的80端口
  
    # 设置服务器的名称，用于匹配请求的主机头  
    server_name sjb.bimetc.cn;  
  
    # 跨域设置  
    add_header Access-Control-Allow-Origin *;  # 允许来自任何来源的跨域请求
    add_header Access-Control-Allow-Credentials "true";  # 允许跨域请求携带凭据（例如cookies）
    add_header Access-Control-Allow-Methods 'GET, POST, DELETE, PUT, OPTIONS';  # 允许跨域请求使用的方法
    add_header Access-Control-Allow-Headers 'token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';  # 允许跨域请求携带的头部信息
  
    # 缓存设置  
    expires max;  # 设置响应的最大缓存时间（实际上这里max是无效的，z通常设置为具体的秒数或时间单位）  # 这一行通常不会这样设置，因为max不是一个有效的值。您可能需要设置具体的过期时间，如expires 1d;表示过期时间为1天。  
    add_header Cache-Control "public";  # 允许公共缓存
    etag on;  # 启用etag（实体标签）生成
  
    # Vue 路由处理，当请求的资源不存在时，尝试返回index.html
    location / { 
        # root指令应该放在try_files之前，因为Nginx会先根据root和try_files来构造文件路径，然后再尝试访问这些路径。 但是，由于Nginx在解析配置时有一定的灵活性，这里的顺序可能仍然能工作。但出于清晰和最佳实践，通常建议将root放在location块的开始部分。
        try_files $uri $uri/ @router;  # 尝试返回请求的文件或目录，如果都不存在则转到@router
        root /opt/nginx4/html2;  # 设置Vue应用的根目录  
        index index.html index.htm;  # 默认的索引文件
    }  
  
    # 静态资源服务，匹配特定文件后缀的请求，并返回/opt/nginx4/statics目录下的文件
    location ~* \.(gif|jpeg|png|js|css|html|ico|mp4|json|b3dm|cmpt|i3dm|apk|wasm)$ {  
        root /opt/nginx4/statics;  
        # 由于已经指定了root /opt/nginx4/statics;，所以Nginx会在这个目录下查找匹配的文件后缀。这通常用于为静态资源提供直接服务，而不需要通过Vue的路由系统。
    }  
  
    # 反向代理到 API 服务器，将/api/开头的请求转发到http://146.56.239.184:6666/
    # 注意最后面都有/, ^~/api/是匹配/api/, 转发到:6666/, 其实在用的时候, 一般后端接口都有/api/xxx, 所以转发到:6666/api/才能正确匹配/api/xxx
    location ^~/api/ {  
        proxy_pass http://146.56.239.184:6666/;  
    }  
  
    # 路由重定向（Vue 路由刷新问题），将@router指定的请求重写为/index.html    
    location @router {  
        rewrite ^.*$ /index.html last;  
    }  
  
    # 错误页面处理 ，当遇到500、502、503、504错误时，返回/usr/share/nginx/html/50x.html  
    error_page 500 502 503 504 /50x.html;
    # 定义错误页面的位置 
    location = /50x.html {  
        root /usr/share/nginx/html;  
    }  
}